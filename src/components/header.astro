---
const { home, energy, services, contact } = Astro.props;

const navItems = [
  { title: "INICIO", url: home },
  { title: "ACERCA DE NOSOTROS", url: "/about" },
  { title: "SERVICIOS", url: services },
  { title: "ENERGÍA SOLAR", url: energy },
  { title: "CONTACTO", url: contact },
];
---

<header
  id="page-header"
  class="absolute bottom-0 z-10 flex items-center justify-between w-full px-8 py-4 text-white"
>
  <a class="flex items-center gap-3" href="#">
    <!-- imagen -->
  </a>
  <div>
    <div class="flex items-center gap-6">
      <nav class="hidden sm:block">
        <ul
          class="flex items-center gap-6 [&>li>a]:border-b-2 [&>li>a]:transition-all"
        >
          {navItems.map(({ title, url }) => (
            <li style="text-decoration: none;">
              <a
                class="text-sm font-medium tracking-wider hover:border-b-black hover:text-black"
                href={url}
              >
                {title}
              </a>
            </li>
          ))}
          <li style="text-decoration: none;margin-top: 23px">
            <a
              class="text-sm font-medium tracking-wider opacity-50 pointer-events-none hover:border-b-black hover:text-black"
              href="#agenda"
            >
              TIENDA
            </a>
            <div>
              <span
                class="bg-gray-100 text-gray-800 text-xs font-semibold px-2.5 py-0.5 rounded dark:bg-gray-700 dark:text-gray-300"
                >¡Muy pronto!
              </span>
            </div>
          </li>
        </ul>
      </nav>
      <button
        id="open-nav-button"
        type="button"
        class="btn sm:hidden"
        aria-label="Navigation"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="w-6 h-6 first"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
          stroke-width="2"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            d="M4 6h16M4 12h8m-8 6h16"></path>
        </svg>
      </button>
    </div>
    <div id="menu-modal" class="hidden modal" aria-hidden="true">
      <div
        class="fixed inset-0 px-8 py-4 bg-opacity-40 backdrop-blur-lg lg:backdrop-blur-0"
      >
        <div class="space-y-4" role="dialog" aria-modal="true">
          <header class="text-right">
            <button
              id="close-nav-button"
              type="button"
              class="btn"
              aria-label="Close navigation"
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                class="w-6 h-6 last"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
                stroke-width="2"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  d="M6 18L18 6M6 6l12 12"></path>
              </svg>
            </button>
          </header>
          <div class="flex justify-center"></div>
          <nav>
            <ul
              class="flex flex-col [&>li>a]:border-b-2 [&>li>a]:border-b-transparent [&>li>a]:transition-all"
            >
              {navItems.map(({ title, url }) => (
                <li>
                  <a class="block py-4 text-xl text-center" href={url}>
                    {title}
                  </a>
                </li>
              ))}
              <li class="pt-5" style="text-decoration: none;">
                <a
                  class="block text-xl text-center opacity-50 pointer-events-none"
                >
                  TIENDA
                </a>
                <div class="block text-xl text-center">
                  <span
                    class="bg-gray-100 text-gray-800 text-xs font-semibold px-2.5 py-0.5 rounded dark:bg-gray-700 dark:text-gray-300"
                    >¡Muy pronto!
                  </span>
                </div>
              </li>
            </ul>
          </nav>
        </div>
      </div>
    </div>
  </div>
</header>

<script>
  import MicroModal from "micromodal";

  const menuModalId = "menu-modal";

  const header = document.querySelector("#page-header");
  const page = document.documentElement;
  const menu = document.querySelector(`#${menuModalId} ul`);
  const openNavButton = document.querySelector("#open-nav-button");
  const closeNavButton = document.querySelector("#close-nav-button");

  const openMenu = () => {
    MicroModal.show(menuModalId, { disableScroll: true });
  };

  const closeMenu = () => {
    MicroModal.close(menuModalId);
  };

  openNavButton.addEventListener("click", openMenu);
  closeNavButton.addEventListener("click", closeMenu);

  document.addEventListener("scroll", () => {
    const d = page.clientHeight - page.scrollTop - header.offsetHeight;
    header.classList.toggle("fixed-header", d < 0);
  });

  menu.addEventListener("click", (event) => {
    if (event.target.tagName === "A") {
      closeMenu();
    }
  });
</script>

<style>
  .fixed-header {
    @apply fixed top-0 bottom-auto;
    @apply text-default bg-default border-default;
  }
  .modal.is-open {
    @apply block;
  }
</style>
